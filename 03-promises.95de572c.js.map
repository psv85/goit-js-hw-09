{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,MAAO,QACPC,SAAU,YACVC,SAAU,OACVC,QAAS,EACTC,aAAc,MACdC,QAAS,IACTC,iBAAkB,kBAClBC,cAAc,EACdC,cAAc,IAGhB,MAAMC,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcX,EAAUY,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBd,QAAiBY,OAE5CG,EAAK,sBAAoBf,QAAeY,SAE3CA,MAoBPJ,EAAKY,iBAAiB,UAGtB,SAAmBC,GACjBA,EAAEC,iBACF,MAAMV,EAAQJ,EAAKI,MAAMW,MACnBC,EAAOhB,EAAKgB,KAAKD,MACjBE,EAASjB,EAAKiB,OAAOF,OAtB7B,SAAeX,EAAOY,EAAMC,GAC1B,IAAIzB,EAAW,EACf,IAAK,IAAI0B,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/B1B,GAAY,EACZW,EAAcX,EAAUY,GACrBe,MAAKb,IACJlB,EAAAF,GAASG,OAAO+B,QAAQd,MAEzBe,OAAMd,IACLnB,EAAAF,GAASG,OAAOiC,QAAQf,MAE5BH,EAAQmB,OAAOnB,GAASmB,OAAOP,IAYjCQ,CAAMpB,EAAOY,EAAMC,GACnBJ,EAAEY,cAAcC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n  width: '280px',\n  position: 'right-top', // 'right-top' - 'right-bottom' - 'left-top' - 'left-bottom' - 'center-top' - 'center-bottom' - 'center-center'\n  distance: '10px',\n  opacity: 1,\n  borderRadius: '5px',\n  timeout: 3000,\n  backOverlayColor: 'rgba(0,0,0,0.5)',\n  clickToClose: false,\n  pauseOnHover: true,\n});\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\n// calculation time after sy=tarting promises\nfunction start(delay, step, amount) {\n  let position = 0;\n  for (let i = 0; i < amount; i += 1) {\n    position += 1;\n    createPromise(position, delay)\n      .then(resolve => {\n        Notiflix.Notify.success(resolve);\n      })\n      .catch(reject => {\n        Notiflix.Notify.failure(reject);\n      });\n    delay = Number(delay) + Number(step);\n  }\n}\n\nform.addEventListener('submit', btnSubmit);\n\n// sending form by submit\nfunction btnSubmit(e) {\n  e.preventDefault();\n  const delay = form.delay.value;\n  const step = form.step.value;\n  const amount = form.amount.value;\n  start(delay, step, amount);\n  e.currentTarget.reset(); // clear input after submit\n}\n"],"names":["$eWCmQ","parcelRequire","$parcel$interopDefault","Notify","init","width","position","distance","opacity","borderRadius","timeout","backOverlayColor","clickToClose","pauseOnHover","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","value","step","amount","i","then","success","catch","failure","Number","$47d4ff9957288465$var$start","currentTarget","reset"],"version":3,"file":"03-promises.95de572c.js.map"}