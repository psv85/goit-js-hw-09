{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,MAAO,QACPC,SAAU,YACVC,SAAU,OACVC,QAAS,EACTC,aAAc,MACdC,QAAS,IACTC,iBAAkB,kBAClBC,cAAc,EACdC,cAAc,IAGhB,IAAMC,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcX,EAAUY,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfpB,EAAS,QAAYoB,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfpB,EAAS,QAAYoB,OAANR,EAAM,SAEnDA,MAoBPJ,EAAKa,iBAAiB,UAGtB,SAAmBC,GACjBA,EAAEC,iBACF,IAAMX,EAAQJ,EAAKI,MAAMY,MACnBC,EAAOjB,EAAKiB,KAAKD,MACjBE,EAASlB,EAAKkB,OAAOF,OAtB7B,SAAeZ,EAAOa,EAAMC,GAE1B,IADA,IAAI1B,EAAW,EACN2B,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAE/BhB,EADAX,GAAY,EACYY,GACrBgB,MAAK,SAAAd,GACJlB,EAAAF,GAASG,OAAOgC,QAAQf,MAEzBgB,OAAM,SAAAf,GACLnB,EAAAF,GAASG,OAAOkC,QAAQhB,MAE5BH,EAAQoB,OAAOpB,GAASoB,OAAOP,IAYjCQ,CAAMrB,EAAOa,EAAMC,GACnBJ,EAAEY,cAAcC,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n  width: '280px',\n  position: 'right-top', // 'right-top' - 'right-bottom' - 'left-top' - 'left-bottom' - 'center-top' - 'center-bottom' - 'center-center'\n  distance: '10px',\n  opacity: 1,\n  borderRadius: '5px',\n  timeout: 3000,\n  backOverlayColor: 'rgba(0,0,0,0.5)',\n  clickToClose: false,\n  pauseOnHover: true,\n});\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\n// calculation time after sy=tarting promises\nfunction start(delay, step, amount) {\n  let position = 0;\n  for (let i = 0; i < amount; i += 1) {\n    position += 1;\n    createPromise(position, delay)\n      .then(resolve => {\n        Notiflix.Notify.success(resolve);\n      })\n      .catch(reject => {\n        Notiflix.Notify.failure(reject);\n      });\n    delay = Number(delay) + Number(step);\n  }\n}\n\nform.addEventListener('submit', btnSubmit);\n\n// sending form by submit\nfunction btnSubmit(e) {\n  e.preventDefault();\n  const delay = form.delay.value;\n  const step = form.step.value;\n  const amount = form.amount.value;\n  start(delay, step, amount);\n  e.currentTarget.reset(); // clear input after submit\n}\n"],"names":["$iU1Pc","parcelRequire","$parcel$interopDefault","Notify","init","width","position","distance","opacity","borderRadius","timeout","backOverlayColor","clickToClose","pauseOnHover","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","e","preventDefault","value","step","amount","i","then","success","catch","failure","Number","$ce04d3a99e08e73b$var$start","currentTarget","reset"],"version":3,"file":"03-promises.a4540fd9.js.map"}